{"pageProps":{"post":{"attributes":{},"html":"<ol>\n<li>Given a list of integers, find the sum of all elements.</li>\n<li>Write a program to remove all duplicates from a list of strings.</li>\n<li>Create a function that takes a list of numbers and returns a new list with only the even numbers.</li>\n<li>Given two lists, find the common elements between them.</li>\n<li>Implement a function to merge two sorted lists into a single sorted list.</li>\n<li>Create a program to find the maximum and minimum values in a list of floats.</li>\n<li>Write a function that takes a list of strings and returns the longest string in the list.</li>\n<li>Create a program to count the occurrences of each word in a given sentence using a list.</li>\n<li>Given a list of names, sort them in alphabetical order.</li>\n<li>Implement a function that takes a list of numbers and returns a new list with the squared values of each element.</li>\n<li>Multiply all elements in a list.</li>\n<li>Insert an element at a specific index in the list.</li>\n<li>Remove an element from the list by its value.</li>\n<li>Remove an element from the list by its index.</li>\n<li>Find the index of the first occurrence of a specific element in the list.</li>\n<li>Find the index of the last occurrence of a specific element in the list.</li>\n<li>Reverse a list.</li>\n<li>Check if a list is empty.</li>\n</ol>\n<br>\n\n\n<ol>\n<li>Find the sum of all elements in a list of integers:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findSum</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">sum, num</span>) =&gt;</span> sum + num, <span class=\"hljs-number\">0</span>);\n}\n</code></pre>\n<ol start=\"2\">\n<li>Remove duplicates from a list of strings:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">removeDuplicates</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">from</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Set</span>(list));\n}\n</code></pre>\n<ol start=\"3\">\n<li>Return a new list with only the even numbers:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">filterEvenNumbers</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">num</span> =&gt;</span> num % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">0</span>);\n}\n</code></pre>\n<ol start=\"4\">\n<li>Find common elements between two lists:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findCommonElements</span>(<span class=\"hljs-params\">list1, list2</span>) {\n  <span class=\"hljs-keyword\">return</span> list1.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> list2.<span class=\"hljs-title function_\">includes</span>(item));\n}\n</code></pre>\n<ol start=\"5\">\n<li>Merge two sorted lists into a single sorted list:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">mergeSortedLists</span>(<span class=\"hljs-params\">list1, list2</span>) {\n  <span class=\"hljs-keyword\">return</span> [...list1, ...list2].<span class=\"hljs-title function_\">sort</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a - b);\n}\n</code></pre>\n<ol start=\"6\">\n<li>Find maximum and minimum values in a list of floats:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findMinMaxValues</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">const</span> max = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">max</span>(...list);\n  <span class=\"hljs-keyword\">const</span> min = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">min</span>(...list);\n  <span class=\"hljs-keyword\">return</span> { max, min };\n}\n</code></pre>\n<ol start=\"7\">\n<li>Find the longest string in a list of strings:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findLongestString</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">longest, current</span>) =&gt;</span> current.<span class=\"hljs-property\">length</span> &gt; longest.<span class=\"hljs-property\">length</span> ? current : longest, <span class=\"hljs-string\">&#x27;&#x27;</span>);\n}\n</code></pre>\n<ol start=\"8\">\n<li>Count occurrences of each word in a sentence using a list:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">countWordOccurrences</span>(<span class=\"hljs-params\">sentence</span>) {\n  <span class=\"hljs-keyword\">const</span> words = sentence.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>);\n  <span class=\"hljs-keyword\">const</span> wordCount = {};\n  words.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">word</span> =&gt;</span> {\n    wordCount[word] = (wordCount[word] || <span class=\"hljs-number\">0</span>) + <span class=\"hljs-number\">1</span>;\n  });\n  <span class=\"hljs-keyword\">return</span> wordCount;\n}\n</code></pre>\n<ol start=\"9\">\n<li>Sort a list of names in alphabetical order:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">sortNamesAlphabetically</span>(<span class=\"hljs-params\">names</span>) {\n  <span class=\"hljs-keyword\">return</span> names.<span class=\"hljs-title function_\">sort</span>();\n}\n</code></pre>\n<ol start=\"10\">\n<li>Return a new list with squared values of each element:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">squareList</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">num</span> =&gt;</span> num * num);\n}\n</code></pre>\n<ol start=\"11\">\n<li>Multiply all elements in a list:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">multiplyListElements</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">product, num</span>) =&gt;</span> product * num, <span class=\"hljs-number\">1</span>);\n}\n</code></pre>\n<ol start=\"12\">\n<li>Insert an element at a specific index in the list:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">insertAtIndex</span>(<span class=\"hljs-params\">list, index, element</span>) {\n  list.<span class=\"hljs-title function_\">splice</span>(index, <span class=\"hljs-number\">0</span>, element);\n  <span class=\"hljs-keyword\">return</span> list;\n}\n</code></pre>\n<ol start=\"13\">\n<li>Remove an element from the list by its value:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">removeByValue</span>(<span class=\"hljs-params\">list, value</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item !== value);\n}\n</code></pre>\n<ol start=\"14\">\n<li>Remove an element from the list by its index:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">removeByIndex</span>(<span class=\"hljs-params\">list, index</span>) {\n  list.<span class=\"hljs-title function_\">splice</span>(index, <span class=\"hljs-number\">1</span>);\n  <span class=\"hljs-keyword\">return</span> list;\n}\n</code></pre>\n<ol start=\"15\">\n<li>Find the index of the first occurrence of a specific element:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findFirstIndex</span>(<span class=\"hljs-params\">list, element</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">indexOf</span>(element);\n}\n</code></pre>\n<ol start=\"16\">\n<li>Find the index of the last occurrence of a specific element:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findLastIndex</span>(<span class=\"hljs-params\">list, element</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">lastIndexOf</span>(element);\n}\n</code></pre>\n<ol start=\"17\">\n<li>Reverse a list:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">reverseList</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-title function_\">reverse</span>();\n}\n</code></pre>\n<ol start=\"18\">\n<li>Check if a list is empty:</li>\n</ol>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">isListEmpty</span>(<span class=\"hljs-params\">list</span>) {\n  <span class=\"hljs-keyword\">return</span> list.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n","markdown":"\n1. Given a list of integers, find the sum of all elements.\n2. Write a program to remove all duplicates from a list of strings.\n3. Create a function that takes a list of numbers and returns a new list with only the even numbers.\n4. Given two lists, find the common elements between them.\n5. Implement a function to merge two sorted lists into a single sorted list.\n6. Create a program to find the maximum and minimum values in a list of floats.\n7. Write a function that takes a list of strings and returns the longest string in the list.\n8. Create a program to count the occurrences of each word in a given sentence using a list.\n9. Given a list of names, sort them in alphabetical order.\n10. Implement a function that takes a list of numbers and returns a new list with the squared values of each element.\n12. Multiply all elements in a list.\n13. Insert an element at a specific index in the list.\n14. Remove an element from the list by its value.\n15. Remove an element from the list by its index.\n16. Find the index of the first occurrence of a specific element in the list.\n17. Find the index of the last occurrence of a specific element in the list.\n18. Reverse a list.\n20. Check if a list is empty.\n\n\n\n<br>\n\n\n1. Find the sum of all elements in a list of integers:\n```javascript\nfunction findSum(list) {\n  return list.reduce((sum, num) => sum + num, 0);\n}\n```\n\n2. Remove duplicates from a list of strings:\n```javascript\nfunction removeDuplicates(list) {\n  return Array.from(new Set(list));\n}\n```\n\n3. Return a new list with only the even numbers:\n```javascript\nfunction filterEvenNumbers(list) {\n  return list.filter(num => num % 2 === 0);\n}\n```\n\n4. Find common elements between two lists:\n```javascript\nfunction findCommonElements(list1, list2) {\n  return list1.filter(item => list2.includes(item));\n}\n```\n\n5. Merge two sorted lists into a single sorted list:\n```javascript\nfunction mergeSortedLists(list1, list2) {\n  return [...list1, ...list2].sort((a, b) => a - b);\n}\n```\n\n6. Find maximum and minimum values in a list of floats:\n```javascript\nfunction findMinMaxValues(list) {\n  const max = Math.max(...list);\n  const min = Math.min(...list);\n  return { max, min };\n}\n```\n\n7. Find the longest string in a list of strings:\n```javascript\nfunction findLongestString(list) {\n  return list.reduce((longest, current) => current.length > longest.length ? current : longest, '');\n}\n```\n\n8. Count occurrences of each word in a sentence using a list:\n```javascript\nfunction countWordOccurrences(sentence) {\n  const words = sentence.split(' ');\n  const wordCount = {};\n  words.forEach(word => {\n    wordCount[word] = (wordCount[word] || 0) + 1;\n  });\n  return wordCount;\n}\n```\n\n9. Sort a list of names in alphabetical order:\n```javascript\nfunction sortNamesAlphabetically(names) {\n  return names.sort();\n}\n```\n\n10. Return a new list with squared values of each element:\n```javascript\nfunction squareList(list) {\n  return list.map(num => num * num);\n}\n```\n\n11. Multiply all elements in a list:\n```javascript\nfunction multiplyListElements(list) {\n  return list.reduce((product, num) => product * num, 1);\n}\n```\n\n12. Insert an element at a specific index in the list:\n```javascript\nfunction insertAtIndex(list, index, element) {\n  list.splice(index, 0, element);\n  return list;\n}\n```\n\n13. Remove an element from the list by its value:\n```javascript\nfunction removeByValue(list, value) {\n  return list.filter(item => item !== value);\n}\n```\n\n14. Remove an element from the list by its index:\n```javascript\nfunction removeByIndex(list, index) {\n  list.splice(index, 1);\n  return list;\n}\n```\n\n15. Find the index of the first occurrence of a specific element:\n```javascript\nfunction findFirstIndex(list, element) {\n  return list.indexOf(element);\n}\n```\n\n16. Find the index of the last occurrence of a specific element:\n```javascript\nfunction findLastIndex(list, element) {\n  return list.lastIndexOf(element);\n}\n```\n\n17. Reverse a list:\n```javascript\nfunction reverseList(list) {\n  return list.reverse();\n}\n```\n\n18. Check if a list is empty:\n```javascript\nfunction isListEmpty(list) {\n  return list.length === 0;\n}\n```\n","slug":"More List Exercises","title":"More List Exercises","section":"Arrays","icon":"info-circle","filePath":"/home/runner/work/amanj-course/amanj-course/lessons/04-Arrays/05-More List Exercises.md","nextSlug":"/amanj-course/lessons/Objects/Objects_Introduction","prevSlug":"/amanj-course/lessons/Arrays/Array and DOM"}},"__N_SSG":true}