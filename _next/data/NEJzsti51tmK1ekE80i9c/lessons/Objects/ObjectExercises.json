{"pageProps":{"post":{"attributes":{"title":"Object Exercises"},"html":"<p><strong>Exercise 1:</strong>\nCreate an object named <code>person</code> with properties <code>name</code>, <code>age</code>, and <code>job</code>.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> person = {\n  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;John&quot;</span>,\n  <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span>,\n  <span class=\"hljs-attr\">job</span>: <span class=\"hljs-string\">&quot;Engineer&quot;</span>\n};\n</code></pre>\n<p><strong>Exercise 2:</strong>\nAdd a method <code>getDetails</code> to the <code>person</code> object that returns a string with all the details.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\">person.<span class=\"hljs-property\">getDetails</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.name}</span> is <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.age}</span> years old and works as a <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.job}</span>.`</span>;\n};\n</code></pre>\n<p><strong>Exercise 3:</strong>\nCreate a nested object <code>address</code> inside the <code>person</code> object with properties <code>street</code>, <code>city</code>, and <code>zipcode</code>.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\">person.<span class=\"hljs-property\">address</span> = {\n  <span class=\"hljs-attr\">street</span>: <span class=\"hljs-string\">&quot;123 Main St&quot;</span>,\n  <span class=\"hljs-attr\">city</span>: <span class=\"hljs-string\">&quot;Cityville&quot;</span>,\n  <span class=\"hljs-attr\">zipcode</span>: <span class=\"hljs-string\">&quot;12345&quot;</span>\n};\n</code></pre>\n<p><strong>Exercise 4:</strong>\nLoop through the properties of the <code>person</code> object and log each property and its value.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> person) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${key}</span>: <span class=\"hljs-subst\">${person[key]}</span>`</span>);\n}\n</code></pre>\n<p><strong>Exercise 5:</strong>\nCreate a constructor function <code>Student</code> that takes <code>name</code> and <code>grade</code> as parameters and creates an object with those properties.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Student</span>(<span class=\"hljs-params\">name, grade</span>) {\n  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> = name;\n  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">grade</span> = grade;\n}\n\n<span class=\"hljs-keyword\">let</span> student1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Student</span>(<span class=\"hljs-string\">&quot;Alice&quot;</span>, <span class=\"hljs-number\">10</span>);\n<span class=\"hljs-keyword\">let</span> student2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Student</span>(<span class=\"hljs-string\">&quot;Bob&quot;</span>, <span class=\"hljs-number\">8</span>);\n</code></pre>\n<p><strong>Exercise 6:</strong>\nAdd a method <code>getGrade</code> to the <code>Student</code> constructor that returns the student&#39;s grade.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-title class_\">Student</span>.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">getGrade</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.name}</span> is in grade <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.grade}</span>.`</span>;\n};\n</code></pre>\n<p><strong>Exercise 7:</strong>\nCreate a class <code>Rectangle</code> with properties <code>width</code> and <code>height</code> and a method <code>getArea</code> that returns the area.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Rectangle</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">width, height</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">width</span> = width;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">height</span> = height;\n  }\n  \n  <span class=\"hljs-title function_\">getArea</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">width</span> * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">height</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> rect = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Rectangle</span>(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(rect.<span class=\"hljs-title function_\">getArea</span>()); <span class=\"hljs-comment\">// Output: 50</span>\n</code></pre>\n<p><strong>Exercise 8:</strong>\nCreate a function <code>mergeObjects</code> that takes two objects and returns a new object with properties from both.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">mergeObjects</span>(<span class=\"hljs-params\">obj1, obj2</span>) {\n  <span class=\"hljs-keyword\">return</span> { ...obj1, ...obj2 };\n}\n\n<span class=\"hljs-keyword\">let</span> object1 = { <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span> };\n<span class=\"hljs-keyword\">let</span> object2 = { <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">c</span>: <span class=\"hljs-number\">4</span> };\n<span class=\"hljs-keyword\">let</span> merged = <span class=\"hljs-title function_\">mergeObjects</span>(object1, object2);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(merged); <span class=\"hljs-comment\">// Output: { a: 1, b: 3, c: 4 }</span>\n</code></pre>\n<p><strong>Exercise 9:</strong>\nCreate an object <code>circle</code> with a property <code>radius</code>. Add methods <code>getArea</code> and <code>getCircumference</code>.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> circle = {\n  <span class=\"hljs-attr\">radius</span>: <span class=\"hljs-number\">5</span>,\n  <span class=\"hljs-attr\">getArea</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">radius</span> ** <span class=\"hljs-number\">2</span>;\n  },\n  <span class=\"hljs-attr\">getCircumference</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">2</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">radius</span>;\n  }\n};\n</code></pre>\n<p><strong>Exercise 10:</strong>\nCreate a function <code>countProperties</code> that takes an object and returns the number of properties it has.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">countProperties</span>(<span class=\"hljs-params\">obj</span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">keys</span>(obj).<span class=\"hljs-property\">length</span>;\n}\n\n<span class=\"hljs-keyword\">let</span> object = { <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">c</span>: <span class=\"hljs-number\">3</span> };\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">countProperties</span>(object)); <span class=\"hljs-comment\">// Output: 3</span>\n</code></pre>\n<p><strong>Exercise 11:</strong>\nCreate an object <code>inventory</code> with properties for different items and their quantities.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> inventory = {\n  <span class=\"hljs-attr\">apples</span>: <span class=\"hljs-number\">10</span>,\n  <span class=\"hljs-attr\">bananas</span>: <span class=\"hljs-number\">20</span>,\n  <span class=\"hljs-attr\">oranges</span>: <span class=\"hljs-number\">15</span>\n};\n</code></pre>\n<p><strong>Exercise 12:</strong>\nWrite a function <code>isPersonEqual</code> that takes two person objects and checks if they have the same properties and values.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">isPersonEqual</span>(<span class=\"hljs-params\">person1, person2</span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(person1) === <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(person2);\n}\n\n<span class=\"hljs-keyword\">let</span> person1 = { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;John&quot;</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> };\n<span class=\"hljs-keyword\">let</span> person2 = { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;John&quot;</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">30</span> };\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">isPersonEqual</span>(person1, person2)); <span class=\"hljs-comment\">// Output: true</span>\n</code></pre>\n<p><strong>Exercise 13:</strong>\nCreate an object <code>book</code> with properties <code>title</code> and <code>author</code>. Use a setter method to change the author.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> book = {\n  <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;The Great Gatsby&quot;</span>,\n  <span class=\"hljs-attr\">_author</span>: <span class=\"hljs-string\">&quot;F. Scott Fitzgerald&quot;</span>,\n  <span class=\"hljs-keyword\">set</span> <span class=\"hljs-title function_\">author</span>(<span class=\"hljs-params\">newAuthor</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_author</span> = newAuthor;\n  },\n  <span class=\"hljs-keyword\">get</span> <span class=\"hljs-title function_\">author</span>() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_author</span>;\n  }\n};\n\nbook.<span class=\"hljs-property\">author</span> = <span class=\"hljs-string\">&quot;Jane Austen&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(book.<span class=\"hljs-property\">author</span>); <span class=\"hljs-comment\">// Output: Jane Austen</span>\n</code></pre>\n<p><strong>Exercise 14:</strong>\nCreate an object <code>playlist</code> that stores a list of songs. Add methods to add, remove, and get songs.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> playlist = {\n  <span class=\"hljs-attr\">songs</span>: [],\n  <span class=\"hljs-attr\">addSong</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">song</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">songs</span>.<span class=\"hljs-title function_\">push</span>(song);\n  },\n  <span class=\"hljs-attr\">removeSong</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">song</span>) {\n    <span class=\"hljs-keyword\">let</span> index = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">songs</span>.<span class=\"hljs-title function_\">indexOf</span>(song);\n    <span class=\"hljs-keyword\">if</span> (index !== -<span class=\"hljs-number\">1</span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">songs</span>.<span class=\"hljs-title function_\">splice</span>(index, <span class=\"hljs-number\">1</span>);\n    }\n  },\n  <span class=\"hljs-attr\">getSongs</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">songs</span>;\n  }\n};\n\nplaylist.<span class=\"hljs-title function_\">addSong</span>(<span class=\"hljs-string\">&quot;Song 1&quot;</span>);\nplaylist.<span class=\"hljs-title function_\">addSong</span>(<span class=\"hljs-string\">&quot;Song 2&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(playlist.<span class=\"hljs-title function_\">getSongs</span>()); <span class=\"hljs-comment\">// Output: [&quot;Song 1&quot;, &quot;Song 2&quot;]</span>\nplaylist.<span class=\"hljs-title function_\">removeSong</span>(<span class=\"hljs-string\">&quot;Song 1&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(playlist.<span class=\"hljs-title function_\">getSongs</span>()); <span class=\"hljs-comment\">// Output: [&quot;Song 2&quot;]</span>\n</code></pre>\n<p><strong>Exercise 15:</strong>\nCreate a class <code>Employee</code> with properties <code>name</code> and <code>salary</code>. Create a method that increases the salary.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Employee</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">name, salary</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> = name;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">salary</span> = salary;\n  }\n  \n  <span class=\"hljs-title function_\">increaseSalary</span>(<span class=\"hljs-params\">amount</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">salary</span> += amount;\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> employee = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Employee</span>(<span class=\"hljs-string\">&quot;Alice&quot;</span>, <span class=\"hljs-number\">50000</span>);\nemployee.<span class=\"hljs-title function_\">increaseSalary</span>(<span class=\"hljs-number\">5000</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(employee.<span class=\"hljs-property\">salary</span>); <span class=\"hljs-comment\">// Output: 55000</span>\n</code></pre>\n<p><strong>Exercise 16:</strong>\nCreate a class <code>BankAccount</code> with properties <code>balance</code> and methods to deposit and withdraw money.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BankAccount</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">initialBalance</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">balance</span> = initialBalance;\n  }\n  \n  <span class=\"hljs-title function_\">deposit</span>(<span class=\"hljs-params\">amount</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">balance</span> += amount;\n  }\n  \n  <span class=\"hljs-title function_\">withdraw</span>(<span class=\"hljs-params\">amount</span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">balance</span> &gt;= amount) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">balance</span> -= amount;\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Insufficient balance.&quot;</span>);\n    }\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> account = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BankAccount</span>(<span class=\"hljs-number\">1000</span>);\naccount.<span class=\"hljs-title function_\">deposit</span>(<span class=\"hljs-number\">500</span>);\naccount.<span class=\"hljs-title function_\">withdraw</span>(<span class=\"hljs-number\">300</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(account.<span class=\"hljs-property\">balance</span>); <span class=\"hljs-comment\">// Output: 1200</span>\n</code></pre>\n<p><strong>Exercise 17:</strong>\nCreate a function <code>findDuplicates</code> that takes an array and returns an object with duplicate values as</p>\n<p> keys and their counts as values.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findDuplicates</span>(<span class=\"hljs-params\">arr</span>) {\n  <span class=\"hljs-keyword\">let</span> duplicates = {};\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> item <span class=\"hljs-keyword\">of</span> arr) {\n    <span class=\"hljs-keyword\">if</span> (duplicates[item]) {\n      duplicates[item]++;\n    } <span class=\"hljs-keyword\">else</span> {\n      duplicates[item] = <span class=\"hljs-number\">1</span>;\n    }\n  }\n  <span class=\"hljs-keyword\">return</span> duplicates;\n}\n\n<span class=\"hljs-keyword\">let</span> numbers = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">1</span>];\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">findDuplicates</span>(numbers)); <span class=\"hljs-comment\">// Output: { 2: 2, 3: 2, 1: 2 }</span>\n</code></pre>\n<p><strong>Exercise 18:</strong>\nCreate a class <code>Person</code> with properties <code>name</code> and <code>age</code>. Create a method that returns if the person is an adult (age &gt;= 18).</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Person</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">name, age</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> = name;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">age</span> = age;\n  }\n  \n  <span class=\"hljs-title function_\">isAdult</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">age</span> &gt;= <span class=\"hljs-number\">18</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> person = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Person</span>(<span class=\"hljs-string\">&quot;John&quot;</span>, <span class=\"hljs-number\">25</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(person.<span class=\"hljs-title function_\">isAdult</span>()); <span class=\"hljs-comment\">// Output: true</span>\n</code></pre>\n<p><strong>Exercise 19:</strong>\nCreate an object <code>weather</code> with properties <code>temperature</code> and <code>conditions</code>. Add a method that provides a weather report.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> weather = {\n  <span class=\"hljs-attr\">temperature</span>: <span class=\"hljs-number\">75</span>,\n  <span class=\"hljs-attr\">conditions</span>: <span class=\"hljs-string\">&quot;sunny&quot;</span>,\n  <span class=\"hljs-attr\">getWeatherReport</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`The weather is <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.conditions}</span> with a temperature of <span class=\"hljs-subst\">${<span class=\"hljs-variable language_\">this</span>.temperature}</span> degrees.`</span>;\n  }\n};\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(weather.<span class=\"hljs-title function_\">getWeatherReport</span>()); <span class=\"hljs-comment\">// Output: The weather is sunny with a temperature of 75 degrees.</span>\n</code></pre>\n<p><strong>Exercise 20:</strong>\nCreate a class <code>Product</code> with properties <code>name</code>, <code>price</code>, and <code>quantity</code>. Add a method to calculate the total cost.</p>\n<p><strong>Answer:</strong></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Product</span> {\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">name, price, quantity</span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">name</span> = name;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">price</span> = price;\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">quantity</span> = quantity;\n  }\n  \n  <span class=\"hljs-title function_\">getTotalCost</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">price</span> * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">quantity</span>;\n  }\n}\n\n<span class=\"hljs-keyword\">let</span> product = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Product</span>(<span class=\"hljs-string\">&quot;Widget&quot;</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">5</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(product.<span class=\"hljs-title function_\">getTotalCost</span>()); <span class=\"hljs-comment\">// Output: 50</span>\n</code></pre>\n<p>Feel free to practice and modify these exercises to deepen your understanding of JavaScript objects. If you have any questions or need further explanations, don&#39;t hesitate to ask!</p>\n","markdown":"\n**Exercise 1:**\nCreate an object named `person` with properties `name`, `age`, and `job`.\n\n**Answer:**\n```javascript\nlet person = {\n  name: \"John\",\n  age: 30,\n  job: \"Engineer\"\n};\n```\n\n**Exercise 2:**\nAdd a method `getDetails` to the `person` object that returns a string with all the details.\n\n**Answer:**\n```javascript\nperson.getDetails = function() {\n  return `${this.name} is ${this.age} years old and works as a ${this.job}.`;\n};\n```\n\n**Exercise 3:**\nCreate a nested object `address` inside the `person` object with properties `street`, `city`, and `zipcode`.\n\n**Answer:**\n```javascript\nperson.address = {\n  street: \"123 Main St\",\n  city: \"Cityville\",\n  zipcode: \"12345\"\n};\n```\n\n**Exercise 4:**\nLoop through the properties of the `person` object and log each property and its value.\n\n**Answer:**\n```javascript\nfor (let key in person) {\n  console.log(`${key}: ${person[key]}`);\n}\n```\n\n**Exercise 5:**\nCreate a constructor function `Student` that takes `name` and `grade` as parameters and creates an object with those properties.\n\n**Answer:**\n```javascript\nfunction Student(name, grade) {\n  this.name = name;\n  this.grade = grade;\n}\n\nlet student1 = new Student(\"Alice\", 10);\nlet student2 = new Student(\"Bob\", 8);\n```\n\n**Exercise 6:**\nAdd a method `getGrade` to the `Student` constructor that returns the student's grade.\n\n**Answer:**\n```javascript\nStudent.prototype.getGrade = function() {\n  return `${this.name} is in grade ${this.grade}.`;\n};\n```\n\n**Exercise 7:**\nCreate a class `Rectangle` with properties `width` and `height` and a method `getArea` that returns the area.\n\n**Answer:**\n```javascript\nclass Rectangle {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  \n  getArea() {\n    return this.width * this.height;\n  }\n}\n\nlet rect = new Rectangle(5, 10);\nconsole.log(rect.getArea()); // Output: 50\n```\n\n**Exercise 8:**\nCreate a function `mergeObjects` that takes two objects and returns a new object with properties from both.\n\n**Answer:**\n```javascript\nfunction mergeObjects(obj1, obj2) {\n  return { ...obj1, ...obj2 };\n}\n\nlet object1 = { a: 1, b: 2 };\nlet object2 = { b: 3, c: 4 };\nlet merged = mergeObjects(object1, object2);\nconsole.log(merged); // Output: { a: 1, b: 3, c: 4 }\n```\n\n**Exercise 9:**\nCreate an object `circle` with a property `radius`. Add methods `getArea` and `getCircumference`.\n\n**Answer:**\n```javascript\nlet circle = {\n  radius: 5,\n  getArea: function() {\n    return Math.PI * this.radius ** 2;\n  },\n  getCircumference: function() {\n    return 2 * Math.PI * this.radius;\n  }\n};\n```\n\n**Exercise 10:**\nCreate a function `countProperties` that takes an object and returns the number of properties it has.\n\n**Answer:**\n```javascript\nfunction countProperties(obj) {\n  return Object.keys(obj).length;\n}\n\nlet object = { a: 1, b: 2, c: 3 };\nconsole.log(countProperties(object)); // Output: 3\n```\n\n**Exercise 11:**\nCreate an object `inventory` with properties for different items and their quantities.\n\n**Answer:**\n```javascript\nlet inventory = {\n  apples: 10,\n  bananas: 20,\n  oranges: 15\n};\n```\n\n**Exercise 12:**\nWrite a function `isPersonEqual` that takes two person objects and checks if they have the same properties and values.\n\n**Answer:**\n```javascript\nfunction isPersonEqual(person1, person2) {\n  return JSON.stringify(person1) === JSON.stringify(person2);\n}\n\nlet person1 = { name: \"John\", age: 30 };\nlet person2 = { name: \"John\", age: 30 };\nconsole.log(isPersonEqual(person1, person2)); // Output: true\n```\n\n**Exercise 13:**\nCreate an object `book` with properties `title` and `author`. Use a setter method to change the author.\n\n**Answer:**\n```javascript\nlet book = {\n  title: \"The Great Gatsby\",\n  _author: \"F. Scott Fitzgerald\",\n  set author(newAuthor) {\n    this._author = newAuthor;\n  },\n  get author() {\n    return this._author;\n  }\n};\n\nbook.author = \"Jane Austen\";\nconsole.log(book.author); // Output: Jane Austen\n```\n\n**Exercise 14:**\nCreate an object `playlist` that stores a list of songs. Add methods to add, remove, and get songs.\n\n**Answer:**\n```javascript\nlet playlist = {\n  songs: [],\n  addSong: function(song) {\n    this.songs.push(song);\n  },\n  removeSong: function(song) {\n    let index = this.songs.indexOf(song);\n    if (index !== -1) {\n      this.songs.splice(index, 1);\n    }\n  },\n  getSongs: function() {\n    return this.songs;\n  }\n};\n\nplaylist.addSong(\"Song 1\");\nplaylist.addSong(\"Song 2\");\nconsole.log(playlist.getSongs()); // Output: [\"Song 1\", \"Song 2\"]\nplaylist.removeSong(\"Song 1\");\nconsole.log(playlist.getSongs()); // Output: [\"Song 2\"]\n```\n\n**Exercise 15:**\nCreate a class `Employee` with properties `name` and `salary`. Create a method that increases the salary.\n\n**Answer:**\n```javascript\nclass Employee {\n  constructor(name, salary) {\n    this.name = name;\n    this.salary = salary;\n  }\n  \n  increaseSalary(amount) {\n    this.salary += amount;\n  }\n}\n\nlet employee = new Employee(\"Alice\", 50000);\nemployee.increaseSalary(5000);\nconsole.log(employee.salary); // Output: 55000\n```\n\n**Exercise 16:**\nCreate a class `BankAccount` with properties `balance` and methods to deposit and withdraw money.\n\n**Answer:**\n```javascript\nclass BankAccount {\n  constructor(initialBalance) {\n    this.balance = initialBalance;\n  }\n  \n  deposit(amount) {\n    this.balance += amount;\n  }\n  \n  withdraw(amount) {\n    if (this.balance >= amount) {\n      this.balance -= amount;\n    } else {\n      console.log(\"Insufficient balance.\");\n    }\n  }\n}\n\nlet account = new BankAccount(1000);\naccount.deposit(500);\naccount.withdraw(300);\nconsole.log(account.balance); // Output: 1200\n```\n\n**Exercise 17:**\nCreate a function `findDuplicates` that takes an array and returns an object with duplicate values as\n\n keys and their counts as values.\n\n**Answer:**\n```javascript\nfunction findDuplicates(arr) {\n  let duplicates = {};\n  for (let item of arr) {\n    if (duplicates[item]) {\n      duplicates[item]++;\n    } else {\n      duplicates[item] = 1;\n    }\n  }\n  return duplicates;\n}\n\nlet numbers = [1, 2, 3, 2, 4, 3, 5, 6, 1];\nconsole.log(findDuplicates(numbers)); // Output: { 2: 2, 3: 2, 1: 2 }\n```\n\n**Exercise 18:**\nCreate a class `Person` with properties `name` and `age`. Create a method that returns if the person is an adult (age >= 18).\n\n**Answer:**\n```javascript\nclass Person {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n  \n  isAdult() {\n    return this.age >= 18;\n  }\n}\n\nlet person = new Person(\"John\", 25);\nconsole.log(person.isAdult()); // Output: true\n```\n\n**Exercise 19:**\nCreate an object `weather` with properties `temperature` and `conditions`. Add a method that provides a weather report.\n\n**Answer:**\n```javascript\nlet weather = {\n  temperature: 75,\n  conditions: \"sunny\",\n  getWeatherReport: function() {\n    return `The weather is ${this.conditions} with a temperature of ${this.temperature} degrees.`;\n  }\n};\n\nconsole.log(weather.getWeatherReport()); // Output: The weather is sunny with a temperature of 75 degrees.\n```\n\n**Exercise 20:**\nCreate a class `Product` with properties `name`, `price`, and `quantity`. Add a method to calculate the total cost.\n\n**Answer:**\n```javascript\nclass Product {\n  constructor(name, price, quantity) {\n    this.name = name;\n    this.price = price;\n    this.quantity = quantity;\n  }\n  \n  getTotalCost() {\n    return this.price * this.quantity;\n  }\n}\n\nlet product = new Product(\"Widget\", 10, 5);\nconsole.log(product.getTotalCost()); // Output: 50\n```\n\nFeel free to practice and modify these exercises to deepen your understanding of JavaScript objects. If you have any questions or need further explanations, don't hesitate to ask!","slug":"ObjectExercises","title":"Object Exercises","section":"Objects","icon":"info-circle","filePath":"/home/runner/work/amanj-course/amanj-course/lessons/05-Objects/04-ObjectExercises.md","nextSlug":"/amanj-course/lessons/Objects/ObjectExercise","prevSlug":"/amanj-course/lessons/Objects/Advanced-Javascript-Objects"}},"__N_SSG":true}