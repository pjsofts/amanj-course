{"pageProps":{"post":{"attributes":{"title":"Promises and Data Fretching Exercises"},"html":"<p><strong>Exercise 1:</strong> Fetch Data from an API</p>\n<ul>\n<li>Write JavaScript code to fetch data from a public API (e.g., JSONPlaceholder or OpenWeatherMap) and log the response to the console.</li>\n</ul>\n<p><strong>Exercise 2:</strong> Handle Errors</p>\n<ul>\n<li>Modify the code from Exercise 1 to handle errors gracefully using <code>.catch()</code> and display an error message if the API request fails.</li>\n</ul>\n<p><strong>Exercise 3:</strong> Chaining Promises</p>\n<ul>\n<li>Fetch data from two different endpoints using Promises and log the combined result to the console.</li>\n</ul>\n<p><strong>Exercise 4:</strong> Promise.all</p>\n<ul>\n<li>Create an array of API requests and use <code>Promise.all</code> to fetch data from multiple endpoints simultaneously. Log the results to the console when all requests are complete.</li>\n</ul>\n<p><strong>Exercise 5:</strong> Async/Await</p>\n<ul>\n<li>Rewrite one of the previous exercises using the <code>async/await</code> syntax to fetch and display data.</li>\n</ul>\n<p><strong>Exercise 6:</strong> Error Handling with Async/Await</p>\n<ul>\n<li>Modify the code from Exercise 5 to handle errors using <code>try/catch</code> and display an error message if any API request fails.</li>\n</ul>\n<p><strong>Exercise 7:</strong> Fetch and Render</p>\n<ul>\n<li>Create a simple HTML page with a button. When the button is clicked, fetch data from an API and render it on the page.</li>\n</ul>\n<p><strong>Exercise 8:</strong> Loading Indicator</p>\n<ul>\n<li>Enhance the code from Exercise 7 by displaying a loading indicator (e.g., a spinner) while the data is being fetched and hiding it once the data is loaded.</li>\n</ul>\n<p><strong>Exercise 9:</strong> Pagination</p>\n<ul>\n<li>Implement pagination for a list of items fetched from an API. Allow users to click &quot;Next&quot; and &quot;Previous&quot; buttons to load more data.</li>\n</ul>\n<p><strong>Exercise 10:</strong> Data Post Processing</p>\n<ul>\n<li>Fetch data from an API and manipulate it in some way (e.g., filter, sort, or transform). Display the processed data on the webpage.</li>\n</ul>\n","markdown":"\n**Exercise 1:** Fetch Data from an API\n   - Write JavaScript code to fetch data from a public API (e.g., JSONPlaceholder or OpenWeatherMap) and log the response to the console.\n\n**Exercise 2:** Handle Errors\n   - Modify the code from Exercise 1 to handle errors gracefully using `.catch()` and display an error message if the API request fails.\n\n**Exercise 3:** Chaining Promises\n   - Fetch data from two different endpoints using Promises and log the combined result to the console.\n\n**Exercise 4:** Promise.all\n   - Create an array of API requests and use `Promise.all` to fetch data from multiple endpoints simultaneously. Log the results to the console when all requests are complete.\n\n**Exercise 5:** Async/Await\n   - Rewrite one of the previous exercises using the `async/await` syntax to fetch and display data.\n\n**Exercise 6:** Error Handling with Async/Await\n   - Modify the code from Exercise 5 to handle errors using `try/catch` and display an error message if any API request fails.\n\n**Exercise 7:** Fetch and Render\n   - Create a simple HTML page with a button. When the button is clicked, fetch data from an API and render it on the page.\n\n**Exercise 8:** Loading Indicator\n   - Enhance the code from Exercise 7 by displaying a loading indicator (e.g., a spinner) while the data is being fetched and hiding it once the data is loaded.\n\n**Exercise 9:** Pagination\n   - Implement pagination for a list of items fetched from an API. Allow users to click \"Next\" and \"Previous\" buttons to load more data.\n\n**Exercise 10:** Data Post Processing\n   - Fetch data from an API and manipulate it in some way (e.g., filter, sort, or transform). Display the processed data on the webpage.","slug":"Exercises","title":"Promises and Data Fretching Exercises","section":"Promises and Data Fetching","icon":"info-circle","filePath":"/home/runner/work/amanj-course/amanj-course/lessons/07-Promises-and-Data-Fetching/04-Exercises.md","nextSlug":"/amanj-course/lessons/Promises-and-Data-Fetching/Answers","prevSlug":"/amanj-course/lessons/Promises-and-Data-Fetching/Flow"}},"__N_SSG":true}